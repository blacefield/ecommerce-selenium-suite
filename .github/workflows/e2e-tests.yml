# E2E Test Automation Workflow
name: E2E Tests

on:
  # Trigger on pushes to master branch, pull requests, and manual trigger 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# Define the jobs that will run
jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    # Get the code
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Set up Python environment
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        # Cache pip dependencies for faster, future builds
        cache: 'pip'

    # Install Chrome browser using Github Actions
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
    
    # Install Firefox browser using Github ACtions (should be on ubuntu machine already)
    - name: Install Firefox
      uses: browser-actions/setup-firefox@v1
      with:
        firefox-version: latest

    # Install Microsoft Edge (for completeness, edge may not work correctly on ubuntu)
    - name: Install Microsoft Edge
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
        sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
        sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
        sudo apt-get update
        sudo apt-get install -y microsoft-edge-stable
      # Continue even if Edge installation fails
      continue-on-error: true

    # Set up virtual display (required for browsers in headless environment)
    - name: Setup virtual display
      run: |
        sudo apt-get install -y xvfb
        export DISPLAY=:4 
        Xvfb :4 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        echo "DISPLAY=:4" >> $GITHUB_ENV

    # Install project dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Clear Webdriver cache casuing issues with Actions
    - name: Clear WebDriver cache
      run: |
        # Remove any existing WebDriver cache
        rm -rf ~/.wdm
        rm -rf .wdm
      
    # Run your Selenium E2E tests
    - name: Run E2E tests
      env:
        WDM_LOG: "0" # Reduce unnecessary logging
        WDM_LOCAL: "1" # Use local cache
        HEADLESS: "true"
      run: pytest -v tests/e2e_checkout.py::TestE2ECheckoutFlow::test_single_item_e2e_purchase --tb=short
      
    # Upload test artifacts if tests fail (for debugging)
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-artifacts
        path: |
          test-results/
          screenshots/
        retention-days: 7
        if-no-files-found: warn #Get rid of false negatives when no artifacts are found